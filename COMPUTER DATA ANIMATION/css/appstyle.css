html, body {
  height:100%;
  width:100%;
  background-color: rgb(255, 255, 255);
}

/* Sections of Layout
-------------------------------------- */
/* Generic styles for demo purposes
-------------------------------------- */
.container {
  font-family: Helvetica, Arial, sans-serif;
  height:98%;
  width:98%;
}

.container > * {
  background-color: rgb(255, 255, 255);

}

/* Typically, you wouldn't specify a height or min-height on this, instead allowing your actual content (i.e., text, images, etc.) to dictate the height of your content area. But since this example has very minimal content, I've set a min-height to mimic a taller content area. */
.content {
  min-height: 40%;

}

/* Layout is stacked vertically by default (for narrower viewports), so give some breathing room between the sections. */
/* Select all elements where parent is a container */
.container > * {
  margin-bottom: 2%;
}

/* Now let's apply grid for wider viewports. */
@media screen and (min-width: 40em) {
  .container > * {
    margin-bottom: 0;
  }
  /* Define the grid */
  .container {
    display: grid;
    grid-template-columns: 0% auto 0%;
    grid-template-rows: 0% auto 0%;
  }
  /* Place items on the grid */
  .header {
    grid-column: 1 / span 3;

  }
  .sidebar {
    grid-row-end: span 2;
  }
  .content {
    grid-column: 2;
  }

}


